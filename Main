import keyboard
import time
import random
import threading

allatokt = ["Ló", "Malaco", "Tehén", "Csirké", "Kutyá", "Macská", "Varjú", "Kecské", "Róká", "Farkas"]
allatok = ["Ló", "Malac", "Tehén", "Csirke", "Kutya", "Macska", "Varjú", "Kecske", "Róka", "Farkas"]
allatok_ = []
a = None
kapu = False
hiba = 0
phases = 1

difficulty = None

def main():
    while True:
        try:
            start()
            break
        except:
            print("Adj meg egy számot: 1/2/3)")
    game(difficulty)

def start():
    global difficulty
    x = input("Add meg a nehézséget:\n(1) - Könnyű\n(2) - Közepes\n(3) - Nehéz\n")
    if len(x) > 1:
        raise ValueError("Adj meg egy számot: 1/2/3)")
    if x == "1":
        difficulty = 1
    elif x == "2":
        difficulty = 2
    elif x == "3":
        difficulty = 3
    else: raise ValueError("Adj meg egy számot: 1/2/3)")

def visszaszaml():
    print("A játék indul")
    for i in range(3, 0, -1):
        print(i)
        time.sleep(1)

def game(dif):
    global phases
    global score
    global hiba
    if dif == 1:
        visszaszaml()
        keret = 2
        finish = random.randint(0,keret)
        alterlista(keret) # limitált lista nehézségnek megfelelőne
        print(f"Nyomd le egy gombot ha látod a: {allatokt[finish]}t")
        while True:
            part = random.choice(allatok_)
            time.sleep((random.randint(25, 30)) * .1)
            print(part)
            if part != allatok[finish]:
                threading.Thread(target=bill).start()
                start = time.time()
                while True:
                    time.sleep(.01)
                    if a:
                        print("Miss*")
                        hiba += 1
                        break
                    elif not a and time.time() - start > 2:
                        print("Ok*")
                        break
                phases += 1


            if part == allatok[finish]:
                start = time.time()
                threading.Thread(target=bill).start()
                while True:
                    time.sleep(.01)
                    if a:
                        print("Good")
                        break
                finishtime = 1 / (time.time() - start)
                score(finishtime,phases,hiba, difficulty)
                break


    elif dif == 2:
        visszaszaml()
        keret = 9
        finish = random.randint(0,keret)
        alterlista(keret) # limitált lista nehézségnek megfelelőne
        print(f"Nyomd le egy gombot ha látod a: {allatokt[finish]}t")
        while True:
            part = random.choice(allatok_)
            time.sleep((random.randint(15, 25)) * .1)
            print(part)
            if part != allatok[finish]:
                threading.Thread(target=bill).start()
                start = time.time()
                while True:
                    time.sleep(.01)
                    if a:
                        print("Miss*")
                        hiba += 1
                        break
                    elif not a and time.time() - start > 2:
                        print("Ok*")
                        break
                phases += 1


            if part == allatok[finish]:
                start = time.time()
                threading.Thread(target=bill).start()
                while True:
                    time.sleep(.01)
                    if a:
                        print("Good")
                        break
                finishtime = 1 / (time.time() - start)
                score(finishtime,phases,hiba,difficulty)
                break


    elif dif == 3:
        visszaszaml()
        keret = 5
        finish = random.randint(0,keret)
        alterlista(keret) # limitált lista nehézségnek megfelelőne
        print(f"Nyomd le egy gombot ha látod a: {allatokt[finish]}t")
        while True:
            part = random.choice(allatok_)
            time.sleep((random.randint(5, 20)) * .1)
            print(part)
            if part != allatok[finish]:
                threading.Thread(target=bill).start()
                start = time.time()
                while True:
                    time.sleep(.01)
                    if a:
                        print("Miss*")
                        hiba += 1
                        break
                    elif not a and time.time() - start > 1.5:
                        print("Ok*")
                        break
                phases += 1


            if part == allatok[finish]:
                start = time.time()
                threading.Thread(target=bill).start()
                while True:
                    time.sleep(.01)
                    if a:
                        print("Good")
                        break
                finishtime = 1 / (time.time() - start)
                score(finishtime,phases,hiba,difficulty)
                break

def bill():
    global a
    a = False
    if keyboard.read_key():
        a = True

def alterlista(listahossz):
    for i in range(listahossz + 1):
        allatok_.append(allatok[i])

def score(finishtime, phases, hiba, difficulty):
    print(f"Time: {finishtime}, phases: {phases}, hiba: {hiba}")
    timescore = round(finishtime * 100)
    phasescore = phases * 3
    hibascore = -1 * hiba * 10 * difficulty
    overall = timescore + phasescore + hibascore
    print(f'Score: {overall}')

main()
